---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { myTypeArr, myType, typeReverse } from '../../config';
import HorizontalCard from '../../components/HorizontalCard.astro';



const { params, props } = Astro;
const allPosts = await getCollection('blog');
const tags = allPosts.flatMap(i => i.data.tags);
let filter = allPosts;
if (params.tag !== 'home') {
  filter = filter.filter(i => i.data.tags?.includes(myType[params.tag]));
}

export async function getStaticPaths() {
  return [
    ...myTypeArr.map(i => ({ params: { tag: i[0] } })),
    { params: { tag: 'home' } },
  ];
}
---
<BaseLayout sideBarActiveItemID="record">
  <div class="card-actions mb-5">
    {
      Array.from(new Set(tags)).map((tag) => (
        tag && <a href={`/record/${typeReverse[tag]}`} class="badge badge-outline">
          {tag}
        </a>
      ))
    }
  </div>
  {
    filter.map((post) => {
        const { data, id } = post;
        const { title, description } = data;
        return (
          <HorizontalCard badge="NEW" img="/post_img.webp" url={`/record/${id}`} title={title}
                          desc={description}
          />
        );
      },
    )
  }
</BaseLayout>