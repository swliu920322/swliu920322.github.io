---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { myTypeArr, myType, typeReverse } from '../../config';
import HorizontalCard from '../../components/HorizontalCard.astro';

const { params, props } = Astro;
const allPosts = await getCollection('blog');
const tags = allPosts.flatMap(i => i.data.tags);
let filter = allPosts;
if (params.tag !== 'home') {
  filter = filter.filter(i => i.data.tags?.includes(myType[params.tag]));
}

export async function getStaticPaths() {
  return [
    ...myTypeArr.map(i => ({ params: { tag: i[0] } })),
    { params: { tag: 'home' } },
  ];
}
console.log(params.tag);
---
<BaseLayout sideBarActiveItemID="record">
  <div class="card-actions mb-5">
    {
      Array.from(new Set(tags)).map((tag) => {
        if (tag) {
          return (
            <a href={`/record/${typeReverse[tag]}`}
               class=`badge badge-outline ${params.tag === typeReverse[tag] ? 'link-active' : ''}`>
              {tag}
            </a>
          );
        }
      })
    }
  </div>
  {
    filter.map((post) => {
        const { data, id } = post;
        const { title, description } = data;
        return (
          <HorizontalCard badge="NEW" img="/post_img.webp" url={`/record/${id}`} title={title}
                          desc={description}
          />
        );
      },
    )
  }
</BaseLayout>

<style>
    .link-active, .badge-outline:hover {
        background: #00b3f0;
        color: black;
    }
</style>